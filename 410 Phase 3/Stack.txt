package k_formula;
import java.util.Stack;
public class Stack_K_Formula {	
public static void ConvertStack(char[] input){
// Initializes variables and stack
Stack<Character> stack = new Stack<Character>();
char star = '*';
stack.push(input[input.length-1]);
// Push first 2 letters onto stack
stack.push(input[input.length-2]);
for(int pointer=(input.length-3);pointer>=0;pointer--){
// Goes through input array from right to left
char symbol = input[pointer];
if (symbol != '*'){
// Symbol is a letter, so push it onto stack
stack.push(input[pointer]);}
else {
/*Symbol is a '*', as long as the stack has 2 or more items:
*pop top 2 letters and print the output line,
*/then push first letter back onto stack
if (stack.size() >= 2){	
char symbol1 = stack.pop();	
char symbol2 = stack.pop();
System.out.print(star);
System.out.print(symbol1);
System.out.println(symbol2);
stack.push(symbol1);}
else {
// Stack has lees than 2 letters, so Error: Invalid K-formula, exit loop
System.out.println("Invalid K-formula");
pointer= -1;}}}
// Checks at the end if the stack has anything other than 1 letter in it,
// if so, Error: Invalid K-formula
if (stack.size() != 1) {
System.out.println("Invalid K-Formula");}}}